plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'pmd'
	id 'com.github.spotbugs' version '4.6.0'
	id "org.sonarqube" version "3.1.1"
	id "org.owasp.dependencycheck" version "6.1.0"
	id "maven-publish"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

/*
test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.6"
    reportsDir = file("$buildDir/customJacocoReportDir")
}
*/
checkstyle {
    ignoreFailures = true
}

checkstyleTest {
	configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
}
pmd {
    ignoreFailures = true
}
dependencies {
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.1'
}

spotbugs {
    ignoreFailures = true
}

dependencyCheck {
    autoUpdate=false
    cveValidForHours=2
    format='ALL'
}
publishing {
        publications {
                bootJava(MavenPublication) {
                        artifact bootJar
			version = '1.0' + ( System.getenv('BUILD_NUMBER') ?: '0' ) + '-SNAPSHOT'
			//groupId = 'com.sinensia'
			//artifactId = 'HelloSpringTesting'
                }
        }
        repositories {
            maven {
                url "http://10.250.14.1:8929/api/v4/projects/4/packages/maven"
                name "GitLab"
                credentials(HttpHeaderCredentials) {
                    name = 'Private-Token'
                    value = System.getenv('TOKEN')
                }
                authentication {
                    header(HttpHeaderAuthentication)
                }
            }
        }
}
